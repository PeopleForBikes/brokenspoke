name: staging-deployment

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/lambda-deployment-staging.yml"
      - "lambdas/**"

permissions:
  # This is required for requesting the JWT.
  id-token: write
  # This is required for actions/checkout.
  contents: read

concurrency: ${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
      - name: Install cargo lambda
        run: pip install cargo-lambda

      # Configure AWS and deploy the lambdas.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@4fc4975a852c8cd99761e2de1f4ba73402e44dd9 # v4.0.3
        with:
          role-to-assume: ${{ secrets.FEDERATED_GITHUB_ROLE_ARN_STAGING }}
          aws-region: ${{ secrets.AWS_REGION_STAGING }}

      # Build the lambdas in release mode and deploy them.
      - name: Build all lambdas
        run: cd lambdas && cargo lambda build --release
      - name: deploy lambdas
        run: |
          LAMBDAS="bna-fargate-run
          bna-fargate-status
          bna-prepare-destination
          bna-save-results
          bna-setup
          bna-sqs-parse
          bna-teardown
          scorecard
          "
          echo $LAMBDAS \
          | xargs -n1 -t \
            cargo lambda deploy \
            --runtime provided.al2023 \
            --iam-role ${{ secrets.LAMBDA_ROLE_ARN_STAGING }}
